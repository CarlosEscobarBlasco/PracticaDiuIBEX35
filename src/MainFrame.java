
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        this.carteras = new ArrayList<>();
        this.listasPorVencimientoCall = new HashMap<>();
        this.listasPorVencimientoPut = new HashMap<>();
        initComponents();

        setDate();
        Timer timDate = new Timer(20000, (ActionEvent evt) -> {
            setDate();
        } // 20 segundos
        );
        timDate.start();

        CollectData();
        Timer timData = new Timer(180000, (ActionEvent evt) -> {
            CollectData();
        } // 3 minutos
        );
        timData.start();

        obtenerOpciones();
        Timer timeOption = new Timer(180000, (ActionEvent evt) -> {
            obtenerOpciones();
        } // 3 minutos
        );
        timeOption.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Escritorio = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        Institucion = new javax.swing.JLabel();
        ULPGC = new javax.swing.JLabel();
        VentanaContado = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaContado = new javax.swing.JTable();
        VentanaFuturos = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaFuturos = new javax.swing.JTable();
        VentanaOpcionesCALL = new javax.swing.JInternalFrame();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaOpcionesCALL = new javax.swing.JTable();
        VentanaOpcionesPUT = new javax.swing.JInternalFrame();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaOpcionesPUT = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        Fecha = new javax.swing.JTextField();
        BarraMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        AñadirCartera = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cartera de Opciones del IBEX35");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/euro.png")).getImage());

        Institucion.setText("<html>Universidad de Las Palmas de Gran Canaria<br>Escuela de Ingeniería Informática<br>Diseño de Interfaces de Usuario<br>Nombres del Grupo</html>");

        ULPGC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LOGO_ULPGC.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(ULPGC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Institucion, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Institucion, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ULPGC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VentanaContado.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        VentanaContado.setIconifiable(true);
        VentanaContado.setTitle("Contado/Spot");
        VentanaContado.setToolTipText("Precio de Contado/Spot");
        VentanaContado.setAlignmentX(0.0F);
        VentanaContado.setAlignmentY(0.0F);
        VentanaContado.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        VentanaContado.setVisible(true);

        TablaContado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Último", "Diferencia(%)", "Anterior", "Máximo", "Mínimo", "Fecha", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaContado);

        javax.swing.GroupLayout VentanaContadoLayout = new javax.swing.GroupLayout(VentanaContado.getContentPane());
        VentanaContado.getContentPane().setLayout(VentanaContadoLayout);
        VentanaContadoLayout.setHorizontalGroup(
            VentanaContadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );
        VentanaContadoLayout.setVerticalGroup(
            VentanaContadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        VentanaFuturos.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        VentanaFuturos.setIconifiable(true);
        VentanaFuturos.setTitle("Futuros (MINI) IBEX35");
        VentanaFuturos.setToolTipText("Futuros del (MINI)IBEX35");
        VentanaFuturos.setVisible(true);

        TablaFuturos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Vencimiento", "Vol. Compra", "P. Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Apertura", "Máximo", "Mínimo", "Anterior", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TablaFuturos);

        javax.swing.GroupLayout VentanaFuturosLayout = new javax.swing.GroupLayout(VentanaFuturos.getContentPane());
        VentanaFuturos.getContentPane().setLayout(VentanaFuturosLayout);
        VentanaFuturosLayout.setHorizontalGroup(
            VentanaFuturosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 834, Short.MAX_VALUE)
        );
        VentanaFuturosLayout.setVerticalGroup(
            VentanaFuturosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaFuturosLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 152, Short.MAX_VALUE))
        );

        VentanaOpcionesCALL.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        VentanaOpcionesCALL.setIconifiable(true);
        VentanaOpcionesCALL.setTitle("Opciones IBEX35 - CALL");
        VentanaOpcionesCALL.setToolTipText("Opciones CALL del IBEX35");
        VentanaOpcionesCALL.setVisible(true);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Fecha de Vencimiento:");

        TablaOpcionesCALL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaOpcionesCALL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaOpcionesCALLMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TablaOpcionesCALL);

        javax.swing.GroupLayout VentanaOpcionesCALLLayout = new javax.swing.GroupLayout(VentanaOpcionesCALL.getContentPane());
        VentanaOpcionesCALL.getContentPane().setLayout(VentanaOpcionesCALLLayout);
        VentanaOpcionesCALLLayout.setHorizontalGroup(
            VentanaOpcionesCALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VentanaOpcionesCALLLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
        );
        VentanaOpcionesCALLLayout.setVerticalGroup(
            VentanaOpcionesCALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaOpcionesCALLLayout.createSequentialGroup()
                .addGroup(VentanaOpcionesCALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addContainerGap())
        );

        VentanaOpcionesPUT.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        VentanaOpcionesPUT.setIconifiable(true);
        VentanaOpcionesPUT.setTitle("Opciones IBEX35 - PUT");
        VentanaOpcionesPUT.setToolTipText("Opciones PUT del IBEX35");
        VentanaOpcionesPUT.setVisible(true);

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha de Vencimiento:");

        TablaOpcionesPUT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaOpcionesPUT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaOpcionesPUTMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TablaOpcionesPUT);

        javax.swing.GroupLayout VentanaOpcionesPUTLayout = new javax.swing.GroupLayout(VentanaOpcionesPUT.getContentPane());
        VentanaOpcionesPUT.getContentPane().setLayout(VentanaOpcionesPUTLayout);
        VentanaOpcionesPUTLayout.setHorizontalGroup(
            VentanaOpcionesPUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VentanaOpcionesPUTLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );
        VentanaOpcionesPUTLayout.setVerticalGroup(
            VentanaOpcionesPUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaOpcionesPUTLayout.createSequentialGroup()
                .addGroup(VentanaOpcionesPUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout EscritorioLayout = new javax.swing.GroupLayout(Escritorio);
        Escritorio.setLayout(EscritorioLayout);
        EscritorioLayout.setHorizontalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EscritorioLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EscritorioLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(VentanaContado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EscritorioLayout.createSequentialGroup()
                        .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VentanaFuturos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(EscritorioLayout.createSequentialGroup()
                                .addComponent(VentanaOpcionesPUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(VentanaOpcionesCALL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
        );
        EscritorioLayout.setVerticalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EscritorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VentanaContado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VentanaFuturos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EscritorioLayout.createSequentialGroup()
                        .addComponent(VentanaOpcionesPUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EscritorioLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(VentanaOpcionesCALL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
        );
        Escritorio.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(VentanaContado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(VentanaFuturos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(VentanaOpcionesCALL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(VentanaOpcionesPUT, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Fecha.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        AñadirCartera.setText("Añadir Cartera");
        AñadirCartera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AñadirCarteraActionPerformed(evt);
            }
        });
        jMenu1.add(AñadirCartera);

        jMenuItem1.setText("Abrir Cartera");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        BarraMenu.add(jMenu1);

        jMenu2.setText("Edit");
        BarraMenu.add(jMenu2);

        setJMenuBar(BarraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Escritorio))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AñadirCarteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AñadirCarteraActionPerformed
        numeroDeCartera++;
        Cartera cartera = new Cartera();
        cartera.setTitle("Cartera " + numeroDeCartera);
        cartera.setSize(650, 250);
        cartera.setClosable(true);
        cartera.setIconifiable(true);
        cartera.setVisible(true);
        carteras.add(cartera);
        Escritorio.add(cartera);
    }//GEN-LAST:event_AñadirCarteraActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if (jComboBox2.getSelectedItem().toString() != null) {
            rellenarPUT(jComboBox2.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedItem().toString() != null) {
            rellenarCALL(jComboBox1.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void TablaOpcionesPUTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaOpcionesPUTMouseClicked
        int row = TablaOpcionesPUT.getSelectedRow();
        for (Cartera cartera : carteras) {
            if (cartera.solicitaValores()) {
                cartera.introducirValor(crearOpcion(TablaOpcionesPUT, row, true));
            }
        }
    }//GEN-LAST:event_TablaOpcionesPUTMouseClicked

    private void TablaOpcionesCALLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaOpcionesCALLMouseClicked
        int row = TablaOpcionesCALL.getSelectedRow();
        for (Cartera cartera : carteras) {
            if (cartera.solicitaValores()) {
                cartera.introducirValor(crearOpcion(TablaOpcionesCALL, row, false));
            }
        }
     }//GEN-LAST:event_TablaOpcionesCALLMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        final JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(null);
        int actionDialog = fileChooser.showOpenDialog(this);
        if (actionDialog != JFileChooser.APPROVE_OPTION) {
            return;
        }
        numeroDeCartera++;
        Cartera cartera = new Cartera();
        cartera.setTitle("Cartera " + numeroDeCartera);
        cartera.setSize(650, 250);
        cartera.setClosable(true);
        cartera.setIconifiable(true);
        cartera.setVisible(true);
        carteras.add(cartera);
        Escritorio.add(cartera);
        try{
            File file = fileChooser.getSelectedFile();
            FileReader fileReader = new FileReader(file);
            BufferedReader buffer = new BufferedReader(fileReader);
            String line;
            while((line=buffer.readLine()) != null){
                String[] lineElements = line.split("%");
                for (int i = 0; i < Integer.parseInt(lineElements[0]); i++) {
                    Opcion opcion = new Opcion();
                    opcion.Tipo = lineElements[1];
                    opcion.Vencimiento = lineElements[2];
                    opcion.Ejercicio = lineElements[3];
                    opcion.DiaDeCompra = lineElements[4];
                    opcion.Venta_Precio = lineElements[5];
                    cartera.introducirValor(opcion);
                }
            }
        }catch(Exception e){}
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AñadirCartera;
    private javax.swing.JMenuBar BarraMenu;
    private javax.swing.JDesktopPane Escritorio;
    private javax.swing.JTextField Fecha;
    private javax.swing.JLabel Institucion;
    private javax.swing.JTable TablaContado;
    private javax.swing.JTable TablaFuturos;
    private javax.swing.JTable TablaOpcionesCALL;
    private javax.swing.JTable TablaOpcionesPUT;
    private javax.swing.JLabel ULPGC;
    private javax.swing.JInternalFrame VentanaContado;
    private javax.swing.JInternalFrame VentanaFuturos;
    private javax.swing.JInternalFrame VentanaOpcionesCALL;
    private javax.swing.JInternalFrame VentanaOpcionesPUT;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables

    private final MEFF_Contado contado = new MEFF_Contado();
    private final MEFF_Futuros futuros = new MEFF_Futuros();
    private final MEFF_Opciones opciones = new MEFF_Opciones();
    private final HashMap<String, ArrayList<Opcion>> listasPorVencimientoCall;
    private final HashMap<String, ArrayList<Opcion>> listasPorVencimientoPut;
    private int numeroDeCartera = 0;
    private final ArrayList<Cartera> carteras;

    private void setDate() {
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy  HH:mm ");
        String formatedDate = sdf.format(date);
        formatedDate = formatedDate.concat(" (local)");
        Fecha.setText(formatedDate);
    }

    private Float toFloat(String texto) {

        texto = texto.replace(".", "");
        texto = texto.replace(",", ".");
        return Float.valueOf(texto);
    }

    private void CollectData() {
        contado.getSpot();
        TableModel model = TablaContado.getModel();
        TablaContado.setValueAt(contado.Spot, 0, 0);
        TablaContado.setValueAt(contado.Anterior, 0, 2);
        TablaContado.setValueAt(contado.Maximo, 0, 3);
        TablaContado.setValueAt(contado.Minimo, 0, 4);
        TablaContado.setValueAt(contado.Fecha, 0, 5);
        TablaContado.setValueAt(contado.Hora, 0, 6);

        Float diferencia = toFloat(contado.Diferencia);
        if (diferencia > 0) {
            model.setValueAt("<html><font color='green'>" + diferencia + "</font></html>", 0, 1);
        } else if (diferencia < 0) {
            model.setValueAt("<html><font color='red'>" + diferencia + "</font></html>", 0, 1);
        } else {
            model.setValueAt("<html><font color='black'>" + diferencia + "</font></html>", 0, 1);
        }

        futuros.getFutures();
        int nfuturos = futuros.Futuros.size();
        DefaultTableModel tablemodel = (DefaultTableModel) TablaFuturos.getModel();
        tablemodel.setRowCount(nfuturos);

        for (int i = 0; i < nfuturos; i++) {
            Futuro f = futuros.Futuros.get(i);
            TablaFuturos.setValueAt(f.Vencimiento, i, 0);
            TablaFuturos.setValueAt(f.Compra_Vol, i, 1);
            TablaFuturos.setValueAt(f.Compra_Precio, i, 2);
            TablaFuturos.setValueAt(f.Venta_Precio, i, 3);
            TablaFuturos.setValueAt(f.Venta_Vol, i, 4);
            TablaFuturos.setValueAt(f.Ultimo, i, 5);
            TablaFuturos.setValueAt(f.Volumen, i, 6);
            TablaFuturos.setValueAt(f.Apertura, i, 7);
            TablaFuturos.setValueAt(f.Maximo, i, 8);
            TablaFuturos.setValueAt(f.Minimo, i, 9);
            TablaFuturos.setValueAt(f.Anterior, i, 10);
            TablaFuturos.setValueAt(f.Hora, i, 11);
        }
        //Notificaciones.setText("Datos disponibles");
    }

    private void obtenerOpciones() {
        if (opciones.getOptions()) {
            int nOpciones = opciones.Opciones.size();
            for (int i = 0; i < nOpciones; i++) {
                if (opciones.Opciones.get(i).Tipo.equals("CALL")) {
                    obtenerCALLS(opciones.Opciones.get(i));
                } else {
                    obtenerPUTS(opciones.Opciones.get(i));
                }
            }
            setFechaCaducidad();
            rellenarOpciones();
        } else {
            System.out.println("Fail to get Options");
        }
    }

    private void obtenerCALLS(Opcion opcion) {
        if (listasPorVencimientoCall.containsKey(opcion.Vencimiento)) {
            listasPorVencimientoCall.get(opcion.Vencimiento).add(opcion);
        } else {
            ArrayList<Opcion> arrayList = new ArrayList<>();
            arrayList.add(opcion);
            listasPorVencimientoCall.put(opcion.Vencimiento, arrayList);
        }
    }

    private void obtenerPUTS(Opcion opcion) {
        if (listasPorVencimientoPut.containsKey(opcion.Vencimiento)) {
            listasPorVencimientoPut.get(opcion.Vencimiento).add(opcion);
        } else {
            ArrayList<Opcion> arrayList = new ArrayList<>();
            arrayList.add(opcion);
            listasPorVencimientoPut.put(opcion.Vencimiento, arrayList);
        }
    }

    private void rellenarOpciones() {
        rellenarPUT(jComboBox2.getItemAt(0).toString());
        rellenarCALL(jComboBox1.getItemAt(0).toString());
    }

    private void rellenarCALL(String date) {
        ArrayList<Opcion> opcionesCall = listasPorVencimientoCall.get(date);
        DefaultTableModel tablemodel = (DefaultTableModel) TablaOpcionesCALL.getModel();
        tablemodel.setRowCount(opcionesCall.size());
        for (int i = 0; i < opcionesCall.size(); i++) {
            TablaOpcionesCALL.setValueAt(opcionesCall.get(i).Ejercicio, i, 0);
            TablaOpcionesCALL.setValueAt(opcionesCall.get(i).Compra_Vol, i, 1);
            TablaOpcionesCALL.setValueAt(opcionesCall.get(i).Compra_Precio, i, 2);
            TablaOpcionesCALL.setValueAt(opcionesCall.get(i).Venta_Precio, i, 3);
            TablaOpcionesCALL.setValueAt(opcionesCall.get(i).Venta_Vol, i, 4);
            TablaOpcionesCALL.setValueAt(opcionesCall.get(i).Ultimo, i, 5);
            TablaOpcionesCALL.setValueAt(opcionesCall.get(i).Volumen, i, 6);
            TablaOpcionesCALL.setValueAt(opcionesCall.get(i).Hora, i, 7);
        }
    }

    private void rellenarPUT(String date) {
        ArrayList<Opcion> opcionesPut = listasPorVencimientoPut.get(date);
        DefaultTableModel tablemodel = (DefaultTableModel) TablaOpcionesPUT.getModel();
        tablemodel.setRowCount(opcionesPut.size());
        for (int i = 0; i < opcionesPut.size(); i++) {
            TablaOpcionesPUT.setValueAt(opcionesPut.get(i).Ejercicio, i, 0);
            TablaOpcionesPUT.setValueAt(opcionesPut.get(i).Compra_Vol, i, 1);
            TablaOpcionesPUT.setValueAt(opcionesPut.get(i).Compra_Precio, i, 2);
            TablaOpcionesPUT.setValueAt(opcionesPut.get(i).Venta_Precio, i, 3);
            TablaOpcionesPUT.setValueAt(opcionesPut.get(i).Venta_Vol, i, 4);
            TablaOpcionesPUT.setValueAt(opcionesPut.get(i).Ultimo, i, 5);
            TablaOpcionesPUT.setValueAt(opcionesPut.get(i).Volumen, i, 6);
            TablaOpcionesPUT.setValueAt(opcionesPut.get(i).Hora, i, 7);
        }
    }

    private void setFechaCaducidad() {
        jComboBox2.removeAll();
        jComboBox1.removeAll();
        for (String key : listasPorVencimientoCall.keySet()) {
            jComboBox1.addItem(key);
        }
        for (String key : listasPorVencimientoPut.keySet()) {
            jComboBox2.addItem(key);
        }
    }

    private Opcion crearOpcion(JTable tabla, int row, boolean put) {
        Opcion opcion = new Opcion();
        Calendar calendar = Calendar.getInstance();
        opcion.Tipo = put ? "PUT" : "CALL";
        opcion.Vencimiento = (String) tabla.getValueAt(row, 0);
        opcion.Ejercicio = (String) tabla.getValueAt(row, 0);
        opcion.DiaDeCompra = calendar.getTime().toLocaleString().substring(0,11).replace("-", " ");
        opcion.Venta_Precio = (String) tabla.getValueAt(row, 3);
        opcion.Compra_Precio = (String) tabla.getValueAt(row, 2);
        return opcion;
    }

}
